grammar de.esserjan.edu.xtext.FregeLang with org.eclipse.xtext.common.Terminals

generate fregeLang "http://www.esserjan.de/edu/xtext/FregeLang"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/**
 * <h3>Resources:</h3>
 * <p>
 *  <ol>
 *   <li>
 *    <a href="https://www.haskell.org/onlinereport/syntax-iso.html">The Haskell 98 Report - 9 Syntax Reference</a>
 *   </li>
 *   <li>
 *    <a href="https://www.haskell.org/onlinereport/haskell2010/haskellch10.html">Haskell 2010 - Chapter 10 Syntax Reference</a>
 *   </li>
 *  </ol>
 * </p>
 */

/* 
 * <p>9.2 Lexical Syntax</p>
 */
Program:
	prg+=(lexeme | whitespace) //
;

lexeme hidden(WS):
	RESERVEDOP | RESERVEDID | SPECIAL | ((modid '.')? (VARID | CONID)) | literal;

literal:
	INTEGER | FLOAT | CHAR | HSTRING;

terminal SPECIAL:
	'(' | ')' | ',' | ';' | '[' | ']' | '`' | '{' | '}';

whitespace hidden(WS):
	COMMENT | NCOMMENT;

terminal COMMENT:
	DASHES->'\n';

terminal fragment DASHES:
	'--' '-'*;

terminal NCOMMENT:
	'{-'->'-}' //
;

/*
 * // hidden(RESERVEDOP) FIXME deny instead of hide TODO all unicode symbols
 */
terminal fragment SYMBOL:
	'!' | '#' | '$' | '%' | '&' | '*' | '+' | '.' | '/' | '<' | '=' | '>' | '?' | '@' | '\\' | '^' | '|' | '-' | '~';

terminal RESERVEDOP:
	'..' | ':' | '::' | '=' | '\\' | '|' | '<-' | '->' | '@' | '~' | '=>';

terminal RESERVEDID:
	'case' | 'class' | 'data' | 'default' | 'deriving' | 'do' | 'else' | 'if' | 'import' | 'in' | 'infix' | 'infixl' |
	'infixr' | 'instance' | 'let' | 'module' | 'newtype' | 'of' | 'then' | 'type' | 'where' | '_';

terminal fragment DIGIT:
	'0'..'9' //
;

terminal fragment SMALL:
	'a'..'z' // TODO all lower-case unicode
;

terminal fragment LARGE:
	'A'..'Z' // TODO all upper-case unicode
;

/*
 * variables, type variables
 * 
 * not RESERVEDOP
 */
terminal VARID:
	SMALL (SMALL | LARGE | DIGIT | '\'')* //
;

/*
 * type constructors, type classes
 */
terminal CONID:
	LARGE (SMALL | LARGE | DIGIT | '\'')* //
;

modid:
	CONID ('.' modid)* // module 
;

/*
 * not RESERVEDOP | DASHES
 */
terminal VARSYM:
	SYMBOL (SYMBOL | ':')* //
;

/*
 * not RESERVEDOP 
 */
terminal CONSYM:
	':' (SYMBOL | ':')*;

terminal INTEGER returns ecore::EBigInteger: // octal + hex
	INT | '0x' (DIGIT | 'a'..'f' | 'A'..'F')+ | '0o' ('0'..'7')+;

terminal FLOAT returns ecore::EBigDecimal:
	(('+' | '-')? INT ('.' INT)? ('e' | 'E') ('+' | '-')? INT);

terminal CHAR returns ecore::EChar: // escaping and special chars
	'\'' ('\\' . | 'a'..'z' | 'A'..'Z') '\'';

terminal HSTRING returns ecore::EString:
	'"' ('\\' . | 'a'..'z' | 'A'..'Z' | GAP)* '"';

terminal fragment GAP:
	WS+ //
;

// EOF